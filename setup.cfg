[metadata]
name = fs.archive
version = 0.3.1
author = Martin Larralde
author-email = martin.larralde@ens-cachan.fr
home-page = https://github.com/althonos/fs.archive
description = Enhanced archive filesystems for Pyfilesystem2
long-description = file: README.rst
license = MIT
platform = any
keywords = archive, zip, tar, iso, filesystem, Pyfilesystem2
classifiers =
  Development Status :: 4 - Beta
  Intended Audience :: Developers
  License :: OSI Approved :: MIT License
  Operating System :: OS Independent
  Programming Language :: Python
  Programming Language :: Python :: 2.7
  Programming Language :: Python :: 3.3
  Programming Language :: Python :: 3.4
  Programming Language :: Python :: 3.5
  Programming Language :: Python :: 3.6
  Topic :: Software Development :: Libraries :: Python Modules
  Topic :: System :: Filesystems

[options.extras_require]
tar.xz =
  backports.lzma ; python_version < '3'
iso =
  pycdlib ~= 1.3
all =
  %(iso)s
  %(tar.xz)s
test =
  green
  coverage
  mock ; python_version < '3.4'
  %(all)s
dev =
  setuptools
  docutils
  Pygments
  codecov
alldev =
  %(test)s
  %(dev)s

[options]
zip_safe = true
include_package_data = false
python_requires = >= 2.7, != 3.0.*, != 3.1.*, != 3.2.*
packages =
  fs.archive
  fs.archive.tarfs
  fs.archive.zipfs
  fs.archive.isofs
test_suite = tests
install_requires =
  fs ~= 2.0.7
  six ~= 1.10
  typing ~= 3.6 ; python_version < '3.6'
tests_require = fs.archive[test]

[options.entry_points]
fs.archive.open_archive =
  .zip     = fs.archive.zipfs:ZipFS
  .tar     = fs.archive.tarfs:TarFS
  .tar.gz  = fs.archive.tarfs:TarFS
  .tar.bz2 = fs.archive.tarfs:TarFS
  .tar.xz  = fs.archive.tarfs:TarFS [tar.xz]
  .tgz     = fs.archive.tarfs:TarFS
  .tbz     = fs.archive.tarfs:TarFS
  .tb2     = fs.archive.tarfs:TarFS
  .tbz2    = fs.archive.tarfs:TarFS
  .txz     = fs.archive.tarfs:TarFS [tar.xz]
  .iso     = fs.archive.isofs:ISOFS [iso]

[aliases]
test = green

[bdist_wheel]
universal = true

[coverage:run]
omit = .eggs

[coverage:report]
show_missing = true
exclude_lines =
  pragma: no cover
  @abc.abstractmethod
  @abc.abstractproperty
  raise NotImplementedError
  return NotImplemented
  if six.PY2
  if six.PY3

[pydocstyle]
inherit = false
ignore = D100,D200,D203,D213,D406,D407

[nosetests]
verbosity = 2
with-coverage = true
cover-xml = true
cover-package = fs.archive
with-doctest = true
doctest-extension = .rst
rednose = true

[green]
file-pattern = test_*.py
verbose = 2
no-skip-report = true
quiet-stdout = true
run-coverage = true
